#рассчет определителя матрицы

import numpy as np

matrix = np.array([[1,5,7],         #заполнение матрицы
                  [5,3,6],
                  [8,9,7]])

def check():                                #проверка на m=n
    if matrix.shape[0] == matrix.shape[1]:
        print('Матрица квадратная')
    else:
        print('Матрица не квадратная')

def minor(matrix, i, j):                    #нахождение миноров
    tmp = [row for k, row in enumerate(matrix) if k != i]
    tmp = [col for k, col in enumerate(zip(*tmp)) if k != j]
    tmp = np.array(tmp)
    return tmp

def FindDet(matrix):                        #нахождение определителя
    det = 0
    if matrix.shape[0] == 2:
        return matrix[0][0]*matrix[1][1]-matrix[0][1]*matrix[1][0]
    else:
        for i in range(len(matrix)):
            det += (-1)**(i)*matrix[0][i]*FindDet(minor(matrix,0,i))
        return det
    

check()                                     #вывод результата проверки
print(FindDet(matrix))                      #вывод определителя
